CRFly v0.93

==Ключевые аспекты==
Вся структура движка жиждется на слоях. Каждый слой является равноправным. Рисование может происходит на любом слое, вывести можно также любой слой.
Каждая текстура является слоем, к ней применимы все те же операции, что и к обычным слоям. Точно такая же ситуация обстоит со шрифтами.
Каждый слой поддерживает прозрачность, а так же может быть полупрозрачным. Пустой чистый слой содержит прозрачный черный цвет.
Слой с номером 0 является зарезервированным. Его можно использовать для сиюминутной обработки, но нежелательно для хранения, так как некоторые процедуры рисования используют его для временного хранения данных.
Слои 1-15 зарезервированы под шрифты. Их изменение может повлечь за собой сбои в системе шрифтов.
В слои начиная с 16-го происходит загрузка текстур.
На все про все отведено 512 слоев. Не созданные слои не занимают память. 

==Прикладные пользовательские процедуры==

int gener(int max);
	Возвращает случайное число, меньшее, чем max.

unsigned int tRGB(unsigned int r,unsigned int g,unsigned int b);
	Переводит поканальные значения цвета (красный, зеленый, синий) в используемый движком формат. Альфа-канал считается равным 255 (полная непрозрачность). Не рекомендуется использовать стандартную функцию RGB, так как она не учитывает значение прозрачности, в результате выходной цвет будет невидимым.
	
unsigned int ARGB(unsigned int a,unsigned int r,unsigned int g,unsigned int b);
	Аналогична tRGB, с единственным отличием: альфа-канал задается явно и может отличаться от 255.

==Основные операции со слоями==

void buildLayer(int id,const int x,const int y);
	Создается слой с номером id, имеющий линейные размеры x и y. Если слой уже существовал, то он будет удален и создан заново. Все слои создаются пустыми.
	
void delLayer(int id);
	Очищает и удаляет из памяти слой id. Если слой не существовал, ничего не произойдет.
	
void destroy();
	Очищает и удаляет все слои.
	
void reset(int id);
	Очищает слой id.
	
int getHeight(int id);
	Возвращает высоту указанного слоя. Несуществующий слой вернет 0.
	
int getWidth(int id);
	Возвращает ширину указанного слоя. Несуществующий слой вернет 0.
	
void renderer(int id, int rxmax, int rymax);
	Выводит на экран слой id. rxmax и rymax необходимо написать в оставшиеся два параметра. 
	При выводе на экран прозрачность слоя не учитывается, он будет выводится полностью непрозрачным.
	
void tex_init();
	Загружает в память список текстур.
	
void font_init();
	Загружает в память список шрифтов. Шрифты могут быть полные и краткие. Полный шрифт содержит символы от 0x00 до 0xFF. Краткий шрифт содержит только цифры. Размер символов в шрифте необходимо написать в этой процедуре вручную. Поддерживаются только моноширинные шрифты.
	
bool tex_read(int fname);
	Загружает текстуру с номером fname в слой fname+16.
	
bool fnt_read(int fname);
	Загружает текстуру шрифта с номером fname в слой fname+1. Размер каждого символа необходимо задать вручную.
	
==Низкоуровневые функции рисования==
	
	Эти функции необходимы для обеспечения работоспособности более сложных функций. Как правило, вызывать эти функции самостоятельно не требуется.
	
void plot(int id, int x,int y,unsigned int color);
	Пишет цвет color в точку (x:y) слоя id. Не учитывает полупрозрачность, цвет перезаписывается. Является самой быстрой, рекомендуется для непрозрачных цветов.
	
void plot(int id, int x,int y,int r,int g,int b);
	Рисует непрозрачную точку с координатами (x:y) слоя id указанными параметрами цвета.
	
void plot(int id, int x,int y, int a, int r,int g,int b);
	Аналогична предыдущей, но точка может быть полупрозрачной. Альфа-канал складывается.
	
void add(int id, int x,int y,int r,int g,int b);
	Выполняет поканальное сложение цветов слоя id в точке (x:y). 
	Максимальное итоговое значение каждого канала не превышает 255. 
	Альфа-канал в итоговой точке не изменяется.
	
void add(int id, int x,int y,int a,int r,int g,int b);
	Аналогична предыдущей, но указывает степень прибавления. 
	Альфа-канал в итоговой точке не изменяется.
	
void mult(int id, int x,int y,int r,int g,int b);
	Выполняет поканальное умножение цветов слоя id в точке (x:y). 
	Альфа-канал в итоговой точке не изменяется.
	
void mult(int id, int x,int y,int a,int r,int g,int b);
	Аналогична предыдущей, но указывает степень умножения. 
	Альфа-канал в итоговой точке не изменяется.
	
void screening(int id, int x,int y,int r,int g,int b);
	Из всех каналов отбираются лишь наиболее яркие цвета. Устарела.
	
void transparency(int id,int x,int y, int a);
	Изменяет значение альфа-канала точки (x:y) в слое id на указанный a.
	
void invert(int id, int x, int y);
	Инвертирует цвет в указанной точке на указанном слое.
	
void grayer(int id, int tid, int x,int y,int x1,int y1,int a);
	Усередняет значения цветовых каналов. Самостоятельное использование не рассматривается, используйте DoGray.
	
==Высокоуровневые функции рисования==

void DrawVLine(int id, unsigned int color, int x1, int y1, int k);
void DrawHLine(int id, unsigned int color, int x1, int y1, int k);

	Рисует вертикальную/горизонтальную линию цвета color на слое id, начиная с точки (x1:y1), длиной k.
	
void FDrawVLine(int id, unsigned int color, int x1, int y1, int k);
void FDrawHLine(int id, unsigned int color, int x1, int y1, int k);

	Аналогична предыдущей, но использует ускоренный способ записи. Рекомендуется для непрозрачных линий, неприемлема для полупрозрачных.
	
void DrawRect(int id, unsigned int color, int x1, int y1, int xk, int yk);

	Рисует прямоугольник цвета color на слое id, начиная с точки (x1:y1), с линейными размерами xk и yk.
	
void DrawRect(int id, unsigned int color, int x1, int y1, int xk, int yk, int mode);

	Аналогична предыдущей, но позволяет выбирать алгоритм рисования mode:
	0 - нормальный (plot)
	1 - добавление (add)
	2 - умножение (mult)
	3 - установка прозрачности (transparency). Используется только альфа-составляющая цвета.
	4 - инвертирование (invert). Заданное значение цвета не имеет значения.
	
void FDrawRect(int id, unsigned int color, int x1, int y1, int xk, int yk);

	Аналогична DrawRect, но выполняет рисование по ускоренному алгоритму. Рекомендуется для непрозрачных прямоугольников, неприемлема для полупрозрачных.

void VGradient(int id, unsigned int colorA, unsigned int colorB, int x1, int y1, int xk, int yk, int mode);
void HGradient(int id, unsigned int colorA, unsigned int colorB, int x1, int y1, int xk, int yk, int mode);

	Рисует вертикальный/горизонтальный градиент на слое id от цвета colorA до colorB, начиная с точки (x1:y1), с линейными размерами xk и yk. Допускает те же режимы рисования, что и в DrawRect, кроме инвертирования.

	
void IncludeLayer(int id, int tid, int x1, int y1, int mode);
	
	Рисует слой id на слое tid, начиная с точки (x1:y1). Допускает те же режимы рисования, что и в DrawRect, кроме инвертирования и установки прозрачности.
	
void FragmentLayer(int id, int tid, int tx, int ty, int x2, int y2, int xk, int yk, int mode);

	Рисует фрагмент слоя id 
